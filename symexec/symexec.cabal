name:                symexec
version:             0.1.0.0
-- synopsis:
-- description:
homepage:            https://github.com/githubuser/symexec#readme
license:             BSD3
license-file:        LICENSE
author:              Author name here
maintainer:          example@example.com
copyright:           2017 Author name here
category:            Web
build-type:          Simple
cabal-version:       >=1.10
extra-source-files:  README.md

library
  hs-source-dirs:      src
  exposed-modules:     Prot.Lang.Analyze, Prot.Lang.Expr, Prot.Lang.Command
  other-modules:       Prot.Lang.Types
  default-language:    Haskell2010
  build-depends:       base >= 4.7 && < 5,
                       parameterized-utils,
                       containers,
                       sbv


  default-extensions: FlexibleInstances, GADTs, GeneralizedNewtypeDeriving, KindSignatures, TemplateHaskell, TypeOperators, TypeSynonymInstances, MultiParamTypeClasses, FunctionalDependencies, ScopedTypeVariables, UndecidableInstances, ConstraintKinds, DataKinds, PolyKinds, EmptyDataDecls, TypeFamilies, RankNTypes, ExistentialQuantification, FlexibleContexts, StandaloneDeriving, DeriveAnyClass, DeriveDataTypeable 

executable symexec
  hs-source-dirs:      src
  main-is:             Main.hs
  default-language:    Haskell2010
  ghc-options:         -Wincomplete-patterns
  build-depends:       base >= 4.7 && < 5,
                       parameterized-utils,
                       containers,
                       sbv,
                       parsec,
                       mtl,
                       graph-matchings,
                       fgl,
                       transformers,
                       free,
                       type-list,
                       vector

  other-modules: Prot.Lang.Expr, Prot.Lang.Types, Prot.Lang.Command, Prot.Lang.Analyze, Prot.Lang.Lang, Prot.Examples.RPS, Prot.Examples.Rotate, Prot.MPS.Process, Prot.Prove.Prove, Prot.Prove.SMT, Prot.Prove.DAG, Prot.Prove.Interface

  default-extensions: FlexibleInstances, GADTs, GeneralizedNewtypeDeriving, KindSignatures, TemplateHaskell, TypeOperators, TypeSynonymInstances, MultiParamTypeClasses, FunctionalDependencies, ScopedTypeVariables, UndecidableInstances, ConstraintKinds, DataKinds, PolyKinds, EmptyDataDecls, TypeFamilies, RankNTypes, ExistentialQuantification, FlexibleContexts, StandaloneDeriving, DeriveAnyClass, DeriveDataTypeable 
